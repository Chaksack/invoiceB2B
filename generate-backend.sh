#!/bin/bash
set -e

echo "Generating backend.tf file with dynamic configuration..."

# Extract project_name from variables.tf
project_name=$(grep -A 3 'variable "project_name"' variables.tf | grep 'default' | sed -E 's/.*"([^"]+)".*/\1/')
echo "Using project_name: $project_name"

# Set environment if provided as an argument, default to "dev"
environment=${1:-dev}
echo "Using environment: $environment"

# Generate the backend.tf file
cat > backend.tf << EOF
# Backend configuration for storing Terraform state in S3
# This allows for team collaboration, state locking, and versioning
#
# To use with different environments, initialize with:
# terraform init -backend-config="key=environments/dev/terraform.tfstate"
# terraform init -backend-config="key=environments/staging/terraform.tfstate"
# terraform init -backend-config="key=environments/prod/terraform.tfstate"
#
# This file was generated by generate-backend.sh script.
# Do not edit this file directly. Instead, modify the script or use backend-config parameters.
#
# Note: The bucket and dynamodb_table names follow the pattern:
# - bucket: "\${var.project_name}-terraform-state"
# - dynamodb_table: "\${var.project_name}-terraform-locks"
#
# However, variables cannot be used directly in the backend configuration.
# The values here are generated based on the project_name in variables.tf.
terraform {
  backend "s3" {
    bucket         = "${project_name}-terraform-state"
    key            = "environments/${environment}/terraform.tfstate"  # Default state file path, override with -backend-config
    region         = "us-east-1"
    encrypt        = true
    dynamodb_table = "${project_name}-terraform-locks"
  }
}
EOF

echo "Backend configuration generated successfully!"
echo "S3 bucket: ${project_name}-terraform-state"
echo "DynamoDB table: ${project_name}-terraform-locks"
echo "Environment: ${environment}"
echo "State file path: environments/${environment}/terraform.tfstate"

echo "You can now initialize Terraform with:"
echo "terraform init"
echo "Or override the environment-specific state file path with:"
echo "terraform init -backend-config=\"key=environments/dev/terraform.tfstate\""
echo "terraform init -backend-config=\"key=environments/staging/terraform.tfstate\""
echo "terraform init -backend-config=\"key=environments/prod/terraform.tfstate\""